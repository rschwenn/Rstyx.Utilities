<!-- 

LooseExpanderToggle

A ToggleButton that controls the visibility of a target element.

- Looks like a ToggleButton on a ToolBar
- The usual set content is complemented by a triangle symbol.

-->

<ToggleButton x:Class="UI.Controls.LooseExpanderToggle"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    
    xmlns:RstyxConverters="clr-namespace:Rstyx.Utilities.UI.Binding.Converters;assembly="
    
    mc:Ignorable="d" 
    d:DesignHeight="50" d:DesignWidth="50"
    
    Style="{DynamicResource LooseExpanderToggleStyle}"
    >
    
    <!-- To get access to these resources from within the root element, "DynamicResource" has to be used! -->
    <ToggleButton.Resources>
        
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        
        <!--<Style x:Key="LooseExpanderToggleStyle" TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}" >-->
        <!--<Style x:Key="LooseExpanderToggleStyle" TargetType="ToggleButton" BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}" >-->
        <Style x:Key="LooseExpanderToggleStyle" TargetType="ToggleButton" BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}" >
            
            <Setter Property="IsChecked" Value="{Binding RelativeSource={RelativeSource Self}, Path=Target.Visibility, Mode=TwoWay, Converter={x:Static RstyxConverters:ConverterProvider.TrueIfVisibleConverter}}" />
            
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <DockPanel>
                            
                            <!-- The toggling triangle -->
                            <Path x:Name="Arrow"
                                DockPanel.Dock="Right"
                                Data="M 1,1.5 L 4.5,5.5 L 8,1.5 Z"
                                Stroke="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" 
                                StrokeThickness="1"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RenderTransformOrigin="0.5,0.5"
                                Fill="Black"
                                >
                                <Path.RenderTransform>
                                    <RotateTransform Angle="0"/>
                                </Path.RenderTransform>
                            </Path>
                            
                            <!-- Here goes the Content set for the LooseExpanderToggle -->
                            <ContentControl
                                Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}"
                                >
                            </ContentControl>
                        </DockPanel>
                        
                        <!-- Triangle direction dependent on IsChecked and ExpandDirection -->
                        <DataTemplate.Triggers>
                            <!--<DataTrigger Value="True" Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource TemplatedParent}}">
                                
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Arrow"
                                                             Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                                             By="180"
                                                             Duration="0:0:0.0"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Arrow"
                                                             Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                                             By="180"
                                                             Duration="0:0:0.0"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                                
                            </DataTrigger>-->
                            
                            <!--<DataTrigger Value="Right" Binding="{Binding Path=ExpandDirection, RelativeSource={RelativeSource TemplatedParent}}">
                                <Setter TargetName="Arrow" Property="Data" Value="M 1.5,1 L 1.5,8 L 5.5,4.5 Z" />
                            </DataTrigger>
                            
                            <DataTrigger Value="Up" Binding="{Binding Path=ExpandDirection, RelativeSource={RelativeSource TemplatedParent}}">
                                <Setter TargetName="Arrow" Property="Data" Value="M 1,5.5 L 4.5,1.5 L 8,5.5 Z" />
                            </DataTrigger>
                            
                            <DataTrigger Value="Left" Binding="{Binding Path=ExpandDirection, RelativeSource={RelativeSource TemplatedParent}}">
                                <Setter TargetName="Arrow" Property="Data" Value="M 5.5,1 L 5.5,8 L 1.5,4.5 Z" />
                            </DataTrigger>-->
                            
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Value="False" Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Condition Value="Right" Binding="{Binding Path=ExpandDirection, RelativeSource={RelativeSource TemplatedParent}}" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="Arrow" Property="Data" Value="M 1.5,1 L 1.5,8 L 5.5,4.5 Z" />
                            </MultiDataTrigger>
                            
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Value="False" Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Condition Value="Up"    Binding="{Binding Path=ExpandDirection, RelativeSource={RelativeSource TemplatedParent}}" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="Arrow" Property="Data" Value="M 1,5.5 L 4.5,1.5 L 8,5.5 Z" />
                            </MultiDataTrigger>
                            
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Value="False" Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Condition Value="Left"  Binding="{Binding Path=ExpandDirection, RelativeSource={RelativeSource TemplatedParent}}" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="Arrow" Property="Data" Value="M 5.5,1 L 5.5,8 L 1.5,4.5 Z" />
                            </MultiDataTrigger>
                            
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Value="False" Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Condition Value="Down"  Binding="{Binding Path=ExpandDirection, RelativeSource={RelativeSource TemplatedParent}}" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="Arrow" Property="Data" Value="M 1,1.5 L 4.5,5.5 L 8,1.5 Z" />
                            </MultiDataTrigger>
                            
                            
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Value="True"  Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Condition Value="Right" Binding="{Binding Path=ExpandDirection, RelativeSource={RelativeSource TemplatedParent}}" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="Arrow" Property="Data" Value="M 5.5,1 L 5.5,8 L 1.5,4.5 Z" />
                            </MultiDataTrigger>
                            
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Value="True"  Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Condition Value="Up"    Binding="{Binding Path=ExpandDirection, RelativeSource={RelativeSource TemplatedParent}}" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="Arrow" Property="Data" Value="M 1,1.5 L 4.5,5.5 L 8,1.5 Z" />
                            </MultiDataTrigger>
                            
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Value="True"  Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Condition Value="Left"  Binding="{Binding Path=ExpandDirection, RelativeSource={RelativeSource TemplatedParent}}" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="Arrow" Property="Data" Value="M 1.5,1 L 1.5,8 L 5.5,4.5 Z" />
                            </MultiDataTrigger>
                            
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Value="True"  Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Condition Value="Down"  Binding="{Binding Path=ExpandDirection, RelativeSource={RelativeSource TemplatedParent}}" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="Arrow" Property="Data" Value="M 1,5.5 L 4.5,1.5 L 8,5.5 Z" />
                            </MultiDataTrigger>
                            
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            
        </Style>
        
    </ToggleButton.Resources>
    
</ToggleButton>

<!-- for jEdit:  :collapseFolds=2::tabSize=4::indentSize=4:-->
